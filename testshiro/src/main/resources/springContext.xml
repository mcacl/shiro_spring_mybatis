<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <context:component-scan base-package="com.testshiro.testshiro" />
    
    <!--mybatis对象的创建工厂-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据源 使用druid连接池-->
        <property name="dataSource" ref="dataSource" />
        <!--mybatis的主配置文件-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
    </bean>
    <!--mybatis扫描器，用于创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定对象创建工厂的实例名-->
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryBean" />
        <!--dao接口-->
        <property name="basePackage" value="com.testshiro.testshiro.dao" />
    </bean>
    <!--申明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--使用注解的事务配置 启用事务注解 方法过多时 则繁琐 xml方便-->
    <!--    <tx:annotation-driven transaction-manager="transactionManager" />-->
    <!--使用xml的事务配置-->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <!--name 可以用通配符-->
            <tx:method name="add*" propagation="REQUIRED" isolation="DEFAULT" timeout="5" rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" timeout="5" rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pt" expression="execution(* *..service..*.*(..))" />
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="pt" />
    </aop:config>
</beans>